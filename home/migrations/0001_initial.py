# Generated by Django 2.2.2 on 2022-01-01 13:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import helpers.basic


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('profile_pic', models.ImageField(null=True, upload_to='static/profile')),
                ('city', models.CharField(default='', max_length=30)),
                ('country', models.CharField(default='', max_length=30)),
                ('usertype', models.CharField(default='user', max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CityList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=50, null=True)),
                ('country_code', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CountryList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=50, null=True)),
                ('country_name', models.CharField(max_length=50, null=True)),
                ('currency', models.CharField(max_length=50, null=True)),
                ('region', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('course_picture', models.ImageField(upload_to='static\\course')),
                ('mark_popular', models.BooleanField(null=True)),
                ('category', models.CharField(max_length=200, null=True)),
                ('h1_name', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(null=True)),
                ('key_features', models.TextField(null=True)),
                ('what_you_learn', models.TextField(null=True)),
                ('course_syllabus', models.TextField(null=True)),
                ('meta_title', models.TextField(null=True)),
                ('meta_description', models.TextField(null=True)),
                ('meta_keywords', models.TextField(null=True)),
                ('fee', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(null=True)),
                ('slug', models.TextField(null=True)),
                ('category', models.CharField(choices=[('Project Management', 'Project management'), ('Agile & Scrum', 'Agile & Scrum'), ('IT Service Management', 'IT Service Management'), ('Quality Management', 'Quality Management')], default='Project Management', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error', models.TextField(null=True)),
                ('ts', models.DateTimeField()),
                ('ticket_number', models.TextField(default=helpers.basic.create_ticket)),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selecting_category', models.CharField(max_length=200)),
                ('course_type', models.CharField(max_length=200)),
                ('course_name', models.TextField()),
                ('slug', models.CharField(max_length=200)),
                ('h1_name', models.CharField(max_length=200)),
                ('course_description', models.TextField()),
                ('course_key_features', models.TextField()),
                ('what_you_learn', models.TextField()),
                ('course_syllabus', models.TextField()),
                ('meta_title', models.TextField()),
                ('meta_description', models.TextField()),
                ('meta_keywords', models.TextField()),
                ('course_picture', models.TextField()),
                ('mark_popular', models.BooleanField(null=True)),
                ('fee', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WithOutCountryCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('features', models.TextField(null=True)),
                ('learn', models.TextField(null=True)),
                ('syllabus', models.TextField(null=True)),
                ('course_code', models.TextField(default=helpers.basic.create_new_ref_number)),
                ('scheduled_dates', models.TextField(null=True)),
                ('scheduled_times', models.TextField(null=True)),
                ('course_language', models.TextField(max_length=15, null=True)),
                ('currency', models.CharField(choices=[('inr', 'India'), ('usd', 'USD')], default='inr', max_length=20)),
                ('course_amount', models.IntegerField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Course')),
            ],
        ),
        migrations.CreateModel(
            name='WithCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('features', models.TextField(null=True)),
                ('learn', models.TextField(null=True)),
                ('syllabus', models.TextField(null=True)),
                ('country', models.TextField(max_length=30, null=True)),
                ('course_code', models.TextField(default=helpers.basic.create_new_ref_number)),
                ('scheduled_dates', models.TextField(null=True)),
                ('scheduled_times', models.TextField(null=True)),
                ('course_language', models.TextField(max_length=15, null=True)),
                ('currency', models.CharField(choices=[('inr', 'India'), ('usd', 'USD')], default='inr', max_length=20)),
                ('course_amount', models.IntegerField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Course')),
            ],
        ),
        migrations.CreateModel(
            name='WithCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('features', models.TextField(null=True)),
                ('learn', models.TextField(null=True)),
                ('syllabus', models.TextField(null=True)),
                ('country', models.TextField(max_length=30, null=True)),
                ('city', models.TextField(null=True)),
                ('course_code', models.TextField(default=helpers.basic.create_new_ref_number)),
                ('scheduled_dates', models.TextField(null=True)),
                ('scheduled_times', models.TextField(null=True)),
                ('course_language', models.TextField(max_length=15, null=True)),
                ('currency', models.CharField(choices=[('inr', 'India'), ('usd', 'USD')], default='inr', max_length=20)),
                ('course_amount', models.IntegerField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Course')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateField()),
                ('status', models.CharField(max_length=200, null=True)),
                ('txnid', models.CharField(max_length=200, null=True)),
                ('amount', models.IntegerField(null=True)),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Training')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.User')),
            ],
            options={
                'unique_together': {('user', 'training')},
            },
        ),
        migrations.AddField(
            model_name='training',
            name='user',
            field=models.ManyToManyField(through='home.TrainingEnrollment', to='home.User'),
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(null=True)),
                ('answer', models.TextField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateField()),
                ('final_grade', models.CharField(blank=True, max_length=1, null=True)),
                ('status', models.CharField(max_length=200, null=True)),
                ('txnid', models.CharField(max_length=200, null=True)),
                ('amount', models.IntegerField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.User')),
            ],
            options={
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='user',
            field=models.ManyToManyField(through='home.Enrollment', to='home.User'),
        ),
        migrations.CreateModel(
            name='EnrollmentWithOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateField()),
                ('status', models.CharField(max_length=200, null=True)),
                ('txnid', models.CharField(max_length=200, null=True)),
                ('amount', models.IntegerField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.User')),
                ('with_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.WithOutCountryCity')),
            ],
            options={
                'unique_together': {('user', 'with_out')},
            },
        ),
        migrations.CreateModel(
            name='EnrollmentWithCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateField()),
                ('status', models.CharField(max_length=200, null=True)),
                ('txnid', models.CharField(max_length=200, null=True)),
                ('amount', models.IntegerField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.User')),
                ('with_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.WithCountry')),
            ],
            options={
                'unique_together': {('user', 'with_country')},
            },
        ),
        migrations.CreateModel(
            name='EnrollmentWithCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateField()),
                ('status', models.CharField(max_length=200, null=True)),
                ('txnid', models.CharField(max_length=200, null=True)),
                ('amount', models.IntegerField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.User')),
                ('with_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.WithCity')),
            ],
            options={
                'unique_together': {('user', 'with_city')},
            },
        ),
    ]
